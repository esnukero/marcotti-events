import pytest
from sqlalchemy.engine import create_engine
from sqlalchemy.orm.session import Session

from {{ config_file }} import {{ config_class }}


class TestConfig({{ config_class }}):
    DBNAME = 'test-marcotti-db'


@pytest.fixture('session')
def config():
    return TestConfig()


@pytest.fixture(scope='session')
def db_connection(request, config):
    engine = create_engine(config.DATABASE_URI)
    connection = engine.connect()
    {% if test_schema == 'club' %}
    from marcottievents.models.club import ClubSchema
    schema = ClubSchema
    {% elif test_schema == 'natl' %}
    from marcottievents.models.national import NatlSchema
    schema = NatlSchema
    {% elif test_schema == 'common' %}
    import marcottievents.models.common as common
    schema = common.BaseSchema
    {% endif %}
    schema.metadata.create_all(connection)

    def fin():
        schema.metadata.drop_all(connection)
        connection.close()
        engine.dispose()
    request.addfinalizer(fin)
    return connection


@pytest.fixture()
def session(request, db_connection):
    __transaction = db_connection.begin_nested()
    session = Session(db_connection)

    def fin():
        session.close()
        __transaction.rollback()
    request.addfinalizer(fin)
    return session
